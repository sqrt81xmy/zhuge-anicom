{"version":3,"sources":["PointsImgClick_grow.js"],"names":["usePointsImgClick_grow","position","x","y","pointsImgRef","current","scale","pointsNum","state","setState","click","setClick","pointsRef","getPointsRef","geometryRef","getGeometryRef","uTimeRef","getUTimeRef","fduration","gsap","to","z","duration","setTimeout","value","delayedCall","geometry","PlaneGeometry","dispose","console","log","handleOnClick"],"mappings":"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","sourcesContent":["import { useState,useEffect } from \"react\";\r\nimport { PlaneGeometry } from \"three\";\r\nimport { gsap } from \"gsap-trial\";\r\n\r\nfunction usePointsImgClick_grow() {\r\n    const [state,setState] = useState({\r\n        position:{x:null,y:null},\r\n        pointsImgRef:{current:null},\r\n        scale:{x:null,y:null},\r\n        pointsNum: null\r\n    })\r\n    const [click,setClick] = useState(0); \r\n    useEffect(()=>{\r\n        if(click == 1){\r\n                // click = 1;\r\n            // materialRef.current.uniforms.uScrollNoSin.value = 0.0; \r\n            const pointsRef = state.pointsImgRef.current.getPointsRef();\r\n            const geometryRef = state.pointsImgRef.current.getGeometryRef(); \r\n            const uTimeRef = state.pointsImgRef.current.getUTimeRef();\r\n            const fduration = 600;;\r\n            gsap.to(pointsRef.current.position, \r\n                {  x: state.position.x, y:state.position.y, z:0,\r\n                    duration: fduration/1000 \r\n                }); \r\n            const duration = 800; \r\n            //然后放大\r\n            setTimeout(()=>{  \r\n                gsap.to(uTimeRef.current,\r\n                {\r\n                    value: duration/1000,duration:duration/1000, \r\n                })\r\n                gsap.delayedCall(duration / 1000, () => {\r\n                    gsap.to(uTimeRef.current, \r\n                    {\r\n                        value: 0.0,\r\n                        duration: duration / 1000, \r\n                    });\r\n                }); \r\n                if(state.scale.x){\r\n                    gsap.to(pointsRef.current.scale,\r\n                        {\r\n                            x:1.6*1.15, y:1.2*1.1*1.04,\r\n                            duration:2*duration/1000\r\n                        }) \r\n                }\r\n                else\r\n                    gsap.to(pointsRef.current.scale,\r\n                    {\r\n                        x: state.scale.x, y: state.scale.y,\r\n                        duration:2*duration/1000\r\n                    }) \r\n                let geometry;\r\n                if(!state.pointsNum)\r\n                    geometry = new PlaneGeometry(1,1,400,400);\r\n                else\r\n                    geometry = new PlaneGeometry(1,1,...state.pointsNum);\r\n                    \r\n                pointsRef.current.geometry.dispose(); // 清理旧的几何体\r\n                pointsRef.current.geometry = geometry; // 更新几何体\r\n                geometryRef.current = geometry;\r\n                console.log(\"widthwidth\",geometryRef.current)\r\n            },fduration) \r\n        }\r\n    },[click])\r\n\r\n    const handleOnClick = ({pointsImgRef,position,scale,pointsNum})=>{\r\n        console.log(click)\r\n        setClick((click)=>{\r\n            return !click;\r\n        })\r\n        setState(()=>{\r\n            return {\r\n                'position': position,\r\n                'scale':scale,\r\n                'pointsNum': pointsNum,\r\n                'pointsImgRef': pointsImgRef\r\n            }\r\n        })\r\n    } \r\n    return handleOnClick\r\n}\r\n\r\nexport default usePointsImgClick_grow\r\n"],"file":"PointsImgClick_grow.dev.js"}