{"version":3,"sources":["PointsImgClick_shrink.js"],"names":["_click","require","_react","_gsapTrial","_three","usePointsImgClick","pointsImgRef","position","scale","pointsNum","pointsRef","current","getPointsRef","meshRef","getGeometryRef","getMeshRef","uTimeRef","getUTimeRef","gsap","handleOnClick","duration","delayedCall","to","x","y","z","fduration","updateGeometry"],"mappings":"2FAAA,IAAAA,OAAAC,QAAA,0CACAC,OAAAD,QAAA,SACAE,WAAAF,QAAA,cACAG,OAAAH,QAAA,SAEA,SAASI,oBAwDL,OAvDsB,SAACC,EAAaC,EAASC,EAAMC,GAE/C,IANRC,EAAAJ,EAAAK,QAAAC,eACAC,GAS4BP,EAAaK,QAAQG,iBATjDR,EAAAK,QAAAI,cAWcC,EAAWV,EAAaK,QAAQM,cAT9CC,WAAAA,KAASb,GAAAA,EAAAA,QAAoB,CACnBc,MAAaC,GAAbD,SAAAA,KAiBFD,WAAAA,KAAKG,YAAYD,GAAiB,WARlCF,WAAAA,KAAAA,GAAKI,EAAGN,QAASL,CACNS,MAAQ,EAAeA,SAAQA,OAK1CF,WAAAA,KAAAI,GAAAZ,EAAAC,QAAAH,MAAA,CACAe,EAAAf,EAAAe,EAAAC,EAAAhB,EAAAgB,EAUIJ,SAAS,MAHbF,WAAAA,KAAAI,GAAAT,EAAAF,QAAAH,MAAA,CAWIe,EAAGf,EAAMe,EAAGC,EAAGhB,EAAMgB,EACrBJ,SAAS,MALbF,WAAAA,KAAAG,YAAA,IAAA,WACAH,WAAAA,KAAAI,GAAAZ,EAAAC,QAAAJ,SACA,CAAAgB,EAAAhB,EAAAgB,EAAAC,EAAAjB,EAAAiB,EAAAC,EAAA,EAaYL,SAAUM,KAZtBR,WAAAA,KAAAA,GAAKI,EAAGT,QAAQF,SAAc,CAAAY,EAAAhB,EAAAgB,EAAAC,EAAAjB,EAAAiB,EAAAC,EAAA,EAAAL,SAAAM,OAK9BpB,EAAAK,QAAAgB,eAAAlB,iBAGsBJ","file":"PointsImgClick_shrink.min.js","sourcesContent":["import { click } from \"@testing-library/user-event/dist/click\";\r\nimport { useEffect,useState } from \"react\";\r\nimport { gsap } from \"gsap-trial\";\r\nimport { PlaneGeometry } from \"three\";\r\n\r\nfunction usePointsImgClick() { \r\n    const handleOnClick = (pointsImgRef,position,scale,pointsNum)=>{\r\n      \r\n        const duration = 800;\r\n        \r\n              //抖抖抖 快\r\n        const pointsRef =  pointsImgRef.current.getPointsRef();\r\n        const geometryRef = pointsImgRef.current.getGeometryRef(); \r\n        const meshRef = pointsImgRef.current.getMeshRef(); \r\n        const uTimeRef = pointsImgRef.current.getUTimeRef();\r\n        gsap.to(uTimeRef.current,{\r\n            value: duration/1000,duration:duration/1000, \r\n        })\r\n        //   const geometry = new PlaneGeometry(1,1,200,200);\r\n        //   pointsRef.current.geometry.dispose(); // 清理旧的几何体\r\n        //   pointsRef.current.geometry = geometry; // 更新几何体\r\n        //   geometryRef.current = geometry;  \r\n        //抖抖抖 慢\r\n        gsap.delayedCall(duration / 1000, () => {\r\n            gsap.to(uTimeRef.current, {\r\n                value: 0.0,\r\n                duration: duration / 1000, \r\n            });\r\n        });\r\n        //变小\r\n        gsap.to(pointsRef.current.scale,{\r\n            x: scale.x, y: scale.y,\r\n            duration:2*duration/1000\r\n        })\r\n        // gsap.to(pointsRef.current.position,{\r\n        //     x:0, y:0,\r\n        //     duration:2*duration/1000\r\n        // })\r\n        //meshRef\r\n        gsap.to(meshRef.current.scale,{\r\n            x: scale.x, y: scale.y,\r\n            duration:2*duration/1000\r\n        })\r\n        // gsap.to(meshRef.current.position,{\r\n        //     x:0, y:0,\r\n        //     duration:2*duration/1000\r\n        // })\r\n        const fduration = 600;; \r\n        gsap.delayedCall(2*duration/1000,()=>{ \r\n            gsap.to(pointsRef.current.position, \r\n                {  x:  position.x, y:  position.y, z:0,\r\n                    duration: fduration/1000 \r\n                }); \r\n            gsap.to(meshRef.current.position, \r\n                {  x:  position.x, y:  position.y, z:0,\r\n                    duration: fduration/1000 \r\n                }); \r\n        }) \r\n        pointsImgRef.current.updateGeometry(pointsNum)\r\n    } \r\n      //回归原位置\r\n    return handleOnClick\r\n}\r\n\r\nexport default usePointsImgClick\r\n"]}