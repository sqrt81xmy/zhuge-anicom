{"version":3,"sources":["PointsImgClick.js"],"names":["_click","require","_react","_interopRequireWildcard","_gsapTrial","_three","usePointsImgClick","duration","pointsImgRef","position","scale","pointsNum","pointsRef","current","getPointsRef","meshRef","getGeometryRef","getMeshRef","uTimeRef","getUTimeRef","gsap","to","value","delayedCall","geometryRef","x","y","z","fduration"],"mappings":"4UAAA,IAAAA,OAAAC,QAAA,0CACAC,OAAAC,wBAAAF,QAAA,UACAG,WAAAH,QAAA,cACAI,OAAAJ,QAAA,wnBAGA,SAASK,oBAqBGC,OApBc,SAACC,EAAaC,EAASC,EAAMC,GAC/C,IAEMC,EAAaJ,EAAaK,QAAQC,eAElCC,GAXdP,EAAAK,QAAAG,iBAWwBR,EAAaK,QAAQI,cAV7CC,EAAAV,EAAAK,QAAAM,cAYQC,WAAAA,KAAKC,GAAGH,EAASL,QAAQ,CAXjCS,MAAAf,GAAAA,SAAAA,KAeQa,WAAAA,KAAKG,YAAYhB,GAAiB,WAC9Ba,WAAAA,KAAKC,GAAGH,EAASL,QAAS,CACtBS,MAAO,EAddhB,SAATC,OAIcK,WAAAA,KAAAA,GAAAA,EAAaJ,QAAaK,MAAb,CACbW,EAAAA,EAAWC,EAAGjB,EAAAA,EAAAA,EACdO,SAAUP,MAiBhBY,WAAAA,KAAKC,GAAGN,EAAQF,QAAQH,MAAM,CAf9BU,EAAAA,EAAKC,EAAGH,EAAAA,EAASL,EACRN,SAAU,MAmBnBa,WAAAA,KAAKG,YAAY,IAAgB,WAC7BH,WAAAA,KAAKC,GAAGT,EAAUC,QAAQJ,SAjB9BW,CAAAA,EAAKG,EAAYhB,EAAAA,EAAAA,EAAjBmB,EAAkCC,EAAA,EAC9BP,SAAQF,KAEJX,WAAAA,KAAQc,GAAEd,EAAQM,QAAGJ,SAFzB,CAAAgB,EAAAhB,EAAAgB,EAAAC,EAAAjB,EAAAiB,EAAAC,EAAA,EAKJpB,SAAAqB,OACAR,EAAKC,QAAGT,eAAkBF,iBAI1BU","file":"PointsImgClick.min.js","sourcesContent":["import { click } from \"@testing-library/user-event/dist/click\";\r\nimport { useEffect,useState } from \"react\";\r\nimport { gsap } from \"gsap-trial\";\r\nimport { PlaneGeometry } from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction usePointsImgClick() { \r\n    const handleOnClick = (pointsImgRef,position,scale,pointsNum)=>{\r\n        const duration = 800;\r\n        //抖抖抖 快\r\n        const pointsRef =  pointsImgRef.current.getPointsRef();\r\n        const geometryRef = pointsImgRef.current.getGeometryRef(); \r\n        const meshRef = pointsImgRef.current.getMeshRef(); \r\n        const uTimeRef = pointsImgRef.current.getUTimeRef();\r\n        gsap.to(uTimeRef.current,{\r\n            value: duration/1000,duration:duration/1000, \r\n        }) \r\n        //抖抖抖 慢\r\n        gsap.delayedCall(duration / 1000, () => {\r\n            gsap.to(uTimeRef.current, {\r\n                value: 0.0,\r\n                duration: duration / 1000, \r\n            });\r\n        });\r\n        //变小\r\n        gsap.to(pointsRef.current.scale,{\r\n            x: scale.x, y: scale.y,\r\n            duration:2*duration/1000\r\n        })  \r\n        gsap.to(meshRef.current.scale,{\r\n            x: scale.x, y: scale.y,\r\n            duration:2*duration/1000\r\n        }) \r\n        const fduration = 600;; \r\n        gsap.delayedCall(2*duration/1000,()=>{ \r\n            gsap.to(pointsRef.current.position, \r\n                {  x:  position.x, y:  position.y, z:0,\r\n                    duration: fduration/1000 \r\n                }); \r\n            gsap.to(meshRef.current.position, \r\n                {  x:  position.x, y:  position.y, z:0,\r\n                    duration: fduration/1000 \r\n                }); \r\n        }) \r\n        pointsImgRef.current.updateGeometry(pointsNum)\r\n    } \r\n      //回归原位置\r\n    return handleOnClick\r\n}\r\n\r\nexport default usePointsImgClick\r\n"]}